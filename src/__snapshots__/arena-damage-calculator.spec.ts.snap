// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArenaDamageCalculator with interface-based mocking should apply critical hit without buffs 1`] = `
Array [
  Hero {
    "buffs": Array [],
    "crtr": 0,
    "def": 0,
    "element": 2,
    "leth": 0,
    "lp": 0,
    "pow": 0,
  },
]
`;

exports[`ArenaDamageCalculator with interface-based mocking should apply defender's Defense buff correctly 1`] = `
Array [
  Hero {
    "buffs": Array [
      1,
    ],
    "crtr": 0,
    "def": 0,
    "element": 2,
    "leth": 0,
    "lp": 100,
    "pow": 0,
  },
]
`;

exports[`ArenaDamageCalculator with interface-based mocking should combine critical hit, attack buff, and defense buff 1`] = `
Array [
  Hero {
    "buffs": Array [
      1,
    ],
    "crtr": 0,
    "def": 500,
    "element": 2,
    "leth": 0,
    "lp": 0,
    "pow": 0,
  },
]
`;

exports[`ArenaDamageCalculator with interface-based mocking should compute basic damage without buffs or crit 1`] = `
Array [
  Hero {
    "buffs": Array [],
    "crtr": 0,
    "def": 0,
    "element": 2,
    "leth": 0,
    "lp": 0,
    "pow": 0,
  },
]
`;

exports[`ArenaDamageCalculator with interface-based mocking should match snapshot for known randomness sequence 1`] = `
Array [
  Hero {
    "buffs": Array [],
    "crtr": 0,
    "def": 500,
    "element": 2,
    "leth": 0,
    "lp": 0,
    "pow": 0,
  },
  Hero {
    "buffs": Array [
      1,
    ],
    "crtr": 0,
    "def": 500,
    "element": 0,
    "leth": 0,
    "lp": 1000,
    "pow": 0,
  },
]
`;

exports[`ArenaDamageCalculator with interface-based mocking should never result in negative damage 1`] = `
Array [
  Hero {
    "buffs": Array [],
    "crtr": 0,
    "def": 10000,
    "element": 2,
    "leth": 0,
    "lp": 1000,
    "pow": 0,
  },
]
`;

exports[`ArenaDamageCalculator with interface-based mocking should reduce damage by 20% when attacker is at elemental disadvantage 1`] = `
Array [
  Hero {
    "buffs": Array [],
    "crtr": 0,
    "def": 0,
    "element": 2,
    "leth": 0,
    "lp": 200,
    "pow": 0,
  },
]
`;
